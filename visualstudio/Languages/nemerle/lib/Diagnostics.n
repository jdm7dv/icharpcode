/*
 * Copyright (c) 2010 RSDN.ru.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. The name of the University may not be used to endorse or promote
 *       products derived from this software without specific prior
 *       written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE UNIVERSITY ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
 * NO EVENT SHALL THE UNIVERSITY BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

using System.Diagnostics;

namespace Nemerle.Diagnostics
{
  // DODO: Move it into separate file.
  public module NDebug
  {
    mutable StackTraceDepth : int = 15;

    public ToStringWitoutNs(str : object) : string
    {
      try
      {
        str.ToString()
          .Replace("System.Linq.Expressions.", "")
          .Replace("System.Linq.", "")
          .Replace("System.Collections.Generic.", "")
          .Replace("System.Collections.", "")
          .Replace("System.", "")
          .Replace("Nemerle.Collections.", "")
          .Replace("Nemerle.Core.", "")
          .Replace("Nemerle.Compiler.", "")
          .Replace("Nemerle.", "")
          .Replace("`1", "")
          .Replace("`2", "")
          .Replace("`3", "")
        }
        catch { | e => $"ToString() throw exceptoin $(e.GetType()): $(e.Message)" }
    }

    public PrintStackTrace() : void
    {
      def st = StackTrace(true);
      def frames = st.GetFrames();

      foreach (frame when i < StackTraceDepth && i != 0 in frames with i)
      {
        def m     = frame.GetMethod();
        def name  = m.Name;
        def count = m.GetParameters().Length;
        def file  = frame.GetFileName();
        def line  = frame.GetFileLineNumber();
        def col   = frame.GetFileColumnNumber();
        Debug.WriteLine($"$file($line, $col): $name($count)");
      }
    }
  }
}
