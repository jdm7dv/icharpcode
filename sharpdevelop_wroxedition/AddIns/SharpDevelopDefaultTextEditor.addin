<AddIn name        = "Default Text Editor"
       author      = "Mike Krueger"
       copyright   = "GPL"
       url         = "http://www.icsharpcode.net"
       description = "NCvs texteditor module"
       version     = "1.0.0">
	
	<Runtime>
		<Import assembly="ICSharpCode.TextEditor.dll"/>
		<Import assembly="SharpDevelop.DefaultTexteditor.dll"/>
	</Runtime>
	
	<Extension path = "/SharpDevelop/Dialogs/OptionsDialog/CodingOptions">
		<DialogPanel id = "CodeTemplates"
		             label = "${res:Dialog.Options.CodeTemplatesText}"
		             class = "ICSharpCode.SharpDevelop.Gui.Dialogs.OptionPanels.CodeTemplatePane"/>
	</Extension>

	<Extension path = "/SharpDevelop/Views/ProjectBrowser/ContextMenu">
		<!-- AddIn to the Project Add Menu -->
		<Conditional ownerstate="ProjectSelected">
        		<MenuItem id = "ExportToHtml"
		                  insertafter = "GenerateDocumentation"
		                  insertbefore = "Separator5"
		                  label = "${res:ProjectComponent.ContextMenu.HtmlExport}" 
		                  class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ExportProjectToHtml"/>
		</Conditional>
	</Extension>
	
	<Extension path = "/AddIns/DefaultTextEditor/Formater">
		<Conditional textcontent = "XML">
			<Class id ="XmlFormatter" class = "ICSharpCode.SharpDevelop.DefaultEditor.XmlFormattingStrategy"/>
		</Conditional>
		<Class id ="DefaultFormatter" class = "ICSharpCode.TextEditor.Document.DefaultFormattingStrategy"/>
	</Extension>
	
	<Extension path = "/SharpDevelop/Workbench/MainMenu/Project">
		<!-- AddIn to the Project Add Menu -->
		<Conditional activeproject="*">
        		<MenuItem id = "ExportToHtml"
		                  insertafter = "GenerateDocumentation"
		                  insertbefore = "Separator2"
		                  label = "${res:ProjectComponent.ContextMenu.HtmlExport}" 
		                  class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ExportProjectToHtml"/>
		</Conditional>
	</Extension>
	
	<Extension path = "/SharpDevelop/Views/ProjectBrowser/ContextMenu/ProjectBrowserNode">
		<!-- AddIn to the project browser context menu -->
		<Conditional activeproject="*">
        		<MenuItem id = "ExportToHtml"
		                  insertafter = "GenerateDocumentation"
		                  insertbefore = "SetAsStartupProjectSeparator"
		                  label = "${res:ProjectComponent.ContextMenu.HtmlExport}" 
		                  class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ExportProjectToHtml"/>
		</Conditional>
        </Extension>
	
	<Extension path = "/SharpDevelop/Workbench/Views">
		<Class id    = "CompilerMessageView" 
		       class = "ICSharpCode.SharpDevelop.Gui.Pads.CompilerMessageView"/>
	</Extension>	
	
	<Extension path = "/SharpDevelop/Workbench/DisplayBindings">
		<DisplayBinding id    = "Text"
		       insertafter = "Browser"
		       supportedformats = "Text Files,Source Files"
		       class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.TextEditorDisplayBinding" />
	</Extension>
	
	<Extension path = "/SharpDevelop/ViewContent/DefaultTextEditor/ContextMenu">
                <MenuItem id = "Cut" 
                          label = "${res:XML.TextAreaContextMenu.Cut}" 
                          icon = "Icons.16x16.CutIcon" 
                          shortcut = "Ctrl+X"
                          class = "ICSharpCode.SharpDevelop.Commands.Cut"/>
                <MenuItem id = "Copy" 
                          label = "${res:XML.TextAreaContextMenu.Copy}" 
                          icon = "Icons.16x16.CopyIcon" 
                          shortcut = "Ctrl+C"
                          class = "ICSharpCode.SharpDevelop.Commands.Copy"/>
                <MenuItem id = "Paste" 
                          label = "${res:XML.TextAreaContextMenu.Paste}" 
                          icon = "Icons.16x16.PasteIcon"  
                          shortcut = "Ctrl+V" 
                          class = "ICSharpCode.SharpDevelop.Commands.Paste"/>
                <MenuItem id = "Delete"
                          label = "${res:XML.MainMenu.EditMenu.Delete}" 
                          icon = "Icons.16x16.DeleteIcon" 
                          class = "ICSharpCode.SharpDevelop.Commands.Delete"/>
		<MenuItem id = "Separator1" label = "-" />
                <MenuItem id = "Save"
                          label = "${res:XML.MainMenu.FileMenu.Save}" 
                          icon = "Icons.16x16.SaveIcon" 
                          shortcut = "CtrlS"
                          class = "ICSharpCode.SharpDevelop.Commands.SaveFile"/>
                <MenuItem id = "SaveAs"
                          label = "${res:XML.MainMenu.FileMenu.SaveAs}" 
                          class = "ICSharpCode.SharpDevelop.Commands.SaveFileAs"/>
                <MenuItem id = "File"
                          label = "${res:XML.MainMenu.FileMenu.Close}" 
                          class ="ICSharpCode.SharpDevelop.Commands.CloseFile"/>
		<MenuItem id = "Separator2" label = "-" />
		<MenuItem id = "Comment"
                          label = "${res:XML.TextAreaContextMenu.CommentUncommentSelection}" 
			  class= "ICSharpCode.SharpDevelop.DefaultEditor.Commands.CommentRegion"/>
		<MenuItem id = "Uncomment"
                          label = "${res:XML.TextAreaContextMenu.UncommentSelection}" 
			  class= "ICSharpCode.SharpDevelop.DefaultEditor.Commands.UncommentRegion"/>
                
                <MenuItem id = "Indent"
                          label = "${res:XML.TextAreaContextMenu.Indent}" 
                          shortcut = "CtrlI"
                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.IndentSelection" />
                <MenuItem id = "FileMode" label = "${res:XML.TextAreaContextMenu.FileMode}">
			<MenuItem id = "HighlightBuilder" label = "boguslabel" class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.HighlightingTypeBuilder" />
                </MenuItem>
		<MenuItem id = "Separator3" label = "-" />
                <MenuItem id = "Options"
                          label = "${res:XML.TextAreaContextMenu.BufferOptions}" 
                          icon = "Icons.16x16.PropertiesIcon"
                          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ShowBufferOptions"/>
	</Extension>

	<Extension path = "/SharpDevelop/Workbench/ToolBar/Standard">
                <Conditional action="Disable">
	                <Or>
	                	<Condition activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextAreaControlProvider"/>
	                	<Condition openproject="*"/>
	                </Or>
		
			<ToolbarItem id = "Find"
			             icon = "Icons.16x16.FindIcon" 
			             insertafter = "CutSeparator"
			             tooltip = "${res:XML.MainMenu.SearchMenu.Find.Description}"
			             class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.Find"/>
	                <ToolbarItem id = "FindNext"
	                             icon = "Icons.16x16.FindNextIcon" 
			             tooltip = "${res:XML.MainMenu.SearchMenu.FindNext.Description}"
	                             class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.FindNext"/>
			<ToolbarItem id = "Replace"
			             icon = "Icons.16x16.ReplaceIcon" 
			             insertafter  = "FindNext"
			             insertbefore = "SearchSeparator"
			             tooltip = "${res:XML.MainMenu.SearchMenu.Replace.Description}"
			             class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.Replace"/>	
		</Conditional>             
		<ToolbarItem id = "SearchSeparator" insertafter = "CutSeparator" tooltip = "-"/>
                <Conditional activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextAreaControlProvider" action="Disable">
	                <ToolbarItem id = "ToggleBookmark"
	                          icon = "Icons.16x16.ToggleBookmark"
	                          tooltip = "${res:XML.MainMenu.SearchMenu.ToggleBookmark.Description}" 
	                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ToggleBookmark"/>
	                <ToolbarItem id = "PrevBookmark"
	                          icon = "Icons.16x16.GotoPrevbookmark"
	                          tooltip = "${res:XML.MainMenu.SearchMenu.PrevBookmark.Description}" 
	                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.PrevBookmark"/>
	                <ToolbarItem id = "NextBookmark"
	                          icon = "Icons.16x16.GotoNextbookmark"
	                          tooltip = "${res:XML.MainMenu.SearchMenu.NextBookmark.Description}" 
	                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.NextBookmark"/>
	                <ToolbarItem id = "ClearBookmarks"
	                          icon = "Icons.16x16.ClearAllBookmarks"
	                          tooltip = "${res:XML.MainMenu.SearchMenu.ClrBookmark.Description}"
	                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ClearBookmarks"/>
	         </Conditional>
	</Extension>
	
	
	<Extension path = "/SharpDevelop/Workbench/MainMenu">
	        <MenuItem id = "Search" insertafter ="View" insertbefore ="Tools" label = "${res:XML.MainMenu.SearchMenu}">
	                <Conditional action="Disable">
		                <Or>
		                	<Condition openwindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextAreaControlProvider"/>
		                	<Condition openproject="*"/>
		                </Or>
		                
		                <MenuItem id = "Find"
		                          label = "${res:XML.MainMenu.SearchMenu.Find}" 
		                          icon = "Icons.16x16.FindIcon" 
		                          description = "${res:XML.MainMenu.SearchMenu.Find.Description}" 
		                          shortcut = "CtrlF" 
		                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.Find"/>
		                <MenuItem id = "FindNext"
		                          label = "${res:XML.MainMenu.SearchMenu.FindNext}" 
		                          icon = "Icons.16x16.FindNextIcon" 
		                          description = "${res:XML.MainMenu.SearchMenu.FindNext.Description}" 
		                          shortcut = "F3"
		                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.FindNext"/>
		                <MenuItem id = "Replace"
		                          label = "${res:XML.MainMenu.SearchMenu.Replace}" 
		                          icon = "Icons.16x16.ReplaceIcon" 
		                          description = "${res:XML.MainMenu.SearchMenu.Replace.Description}" 
		                          shortcut = "CtrlR"
		                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.Replace"/>
		        </Conditional>
		        
		        <MenuItem id = "SearchSeparator" label = "-" />
	                <MenuItem id = "FindInFiles"
	                          label = "${res:XML.MainMenu.SearchMenu.FindInFiles}" 
	                          icon = "Icons.16x16.FindInFiles" 
	                          description = "${res:XML.MainMenu.SearchMenu.FindInFiles.Description}" 
	                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.FindInFiles"/>
	                <MenuItem id = "ReplaceInFiles"
	                          label = "${res:XML.MainMenu.SearchMenu.ReplaceInFiles}" 
	                          icon = "Icons.16x16.ReplaceInFiles" 
	                          description = "${res:XML.MainMenu.SearchMenu.ReplaceInFiles.Description}" 
	                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ReplaceInFiles"/>
	                
	                <MenuItem id = "SearchInFilesSeparator" label = "-" />
	                <Conditional activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextAreaControlProvider" action="Disable">
			        
		                <MenuItem id = "ToggleBookmark"
		                          label = "${res:XML.MainMenu.SearchMenu.ToggleBookmark}" 
		                          description = "${res:XML.MainMenu.SearchMenu.ToggleBookmark.Description}" 
		                          shortcut = "CtrlF2"
		                          icon = "Icons.16x16.ToggleBookmark"
		                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ToggleBookmark"/>
		                <MenuItem id = "PrevBookmark"
		                          label = "${res:XML.MainMenu.SearchMenu.PrevBookmark}" 
		                          description = "${res:XML.MainMenu.SearchMenu.PrevBookmark.Description}" 
		                          shortcut = "AltF2"
		                          icon = "Icons.16x16.GotoPrevbookmark"
		                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.PrevBookmark"/>
		                <MenuItem id = "NextBookmark"
		                          label = "${res:XML.MainMenu.SearchMenu.NextBookmark}" 
		                          description = "${res:XML.MainMenu.SearchMenu.NextBookmark.Description}" 
		                          shortcut = "F2" 
		                          icon = "Icons.16x16.GotoNextbookmark"
		                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.NextBookmark"/>
		                <MenuItem id = "ClearBookmarks"
		                          label = "${res:XML.MainMenu.SearchMenu.ClrBookmark}" 
		                          description = "${res:XML.MainMenu.SearchMenu.ClrBookmark.Description}"
		                          icon = "Icons.16x16.ClearAllBookmarks"
		                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ClearBookmarks"/>
		                <MenuItem id = "Separator2" label = "-" />
		                <MenuItem id = "GotoLineNr"
		                          label = "${res:XML.MainMenu.SearchMenu.GotoLineNr}" 
		                          description = "${res:XML.MainMenu.SearchMenu.GotoLineNr.Description}" 
		                          shortcut = "CtrlG"
		                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.GotoLineNumber"/>
		                <MenuItem id = "Separator3" label = "-" />
		                <MenuItem id = "GotoBrace"
		                          label = "${res:XML.MainMenu.SearchMenu.GotoBrace}" 
		                          description = "${res:XML.MainMenu.SearchMenu.GotoBrace.Description}" 
		                          shortcut = "CtrlB"
		                          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.GotoMatchingBrace"/>
			</Conditional>
	        </MenuItem> 
	</Extension>
	
	<Extension path = "/SharpDevelop/Workbench/MainMenu/Edit">
                <MenuItem insertafter = "Delete" insertbefore = "SelectAll" id = "Separator2" label = "-" />
                <MenuItem insertafter = "Separator2" insertbefore = "Separator3" id = "Format" label = "${res:XML.MainMenu.EditMenu.FormatMenu}">
	                <Conditional activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextAreaControlProvider" action="Disable">
                        
                        <MenuItem id = "RemoveLeadingWs" 
                                  label = "${res:XML.MainMenu.EditMenu.FormatMenu.RlWs}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.RlWs.Description}" 
                                  class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.RemoveLeadingWS"/>
                        <MenuItem id = "RemoveTrailingWs"
                                  label = "${res:XML.MainMenu.EditMenu.FormatMenu.RtWs}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.RtWs.Description}"
                                  class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.RemoveTrailingWS"/>
                        <MenuItem id = "Seperator1" label = "-" />
                        <MenuItem id = "UpperCase"  
                                  label = "${res:XML.MainMenu.EditMenu.FormatMenu.UpperCase}" 
                                  icon = "Icons.16x16.LowerToUpperCase" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.UpperCase.Description}" 
                                  class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ToUpperCase"/>
                        <MenuItem id = "LowerCase" 
                                  label = "${res:XML.MainMenu.EditMenu.FormatMenu.LowerCase}" 
                                  icon = "Icons.16x16.UpperToLowerCase" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.LowerCase.Description}"
                                  class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ToLowerCase"/>
                        <MenuItem id = "Capitalize"
                                  label = "${res:XML.MainMenu.EditMenu.FormatMenu.Capitalize}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.Capitalize.Description}" 
                                  class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.CapitalizeAction"/>
                        <MenuItem id = "InvertCase"
                                  label = "${res:XML.MainMenu.EditMenu.FormatMenu.InvertCase}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.InvertCase.Description}" 
                                  class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.InvertCaseAction"/>
                        <MenuItem id = "Separator2" label = "-" />
                        <MenuItem id = "Tabs2Spaces" 
                                  label = "${res:XML.MainMenu.EditMenu.FormatMenu.Tab2Space}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.Tab2Space.Description}" 
                                  class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ConvertTabsToSpaces"/>
                        <MenuItem id = "Spaces2Tabs"
                                  label = "${res:XML.MainMenu.EditMenu.FormatMenu.Space2Tab}"
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.Space2Tab.Description}"
                                  class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ConvertSpacesToTabs"/>
                        <MenuItem id = "LeadingTabs2Spaces"
                                  label = "${res:XML.MainMenu.EditMenu.FormatMenu.LdTab2Space}"
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.LdTab2Space.Description}" 
                                  class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ConvertLeadingTabsToSpaces"/>
                        <MenuItem id = "LeadingSpaces2Tabs"
                                  label = "${res:XML.MainMenu.EditMenu.FormatMenu.LdSpace2Tab}"   
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.LdSpace2Tab.Description}" 
                                  class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ConvertLeadingSpacesToTabs"/>
        		</Conditional>
                </MenuItem>
                <MenuItem insertafter = "Separator2" insertbefore = "SelectAll" id = "Separator3" label = "-" />
	</Extension>

	<Extension path = "/SharpDevelop/ViewContent/DefaultTextEditor/OptionsDialog">
		<DialogPanel id = "General"
		             label = "${res:Dialog.Options.IDEOptions.TextEditor.General.PanelName}"
		             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.GeneralTextEditorPanel"/>
		<DialogPanel id = "Markers"
		             label = "${res:Dialog.Options.IDEOptions.TextEditor.Markers.PanelName}"
		             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.MarkersTextEditorPanel"/>
		<DialogPanel id = "Behavior"
		             label = "${res:Dialog.Options.IDEOptions.TextEditor.Behaviour.PanelName}"
		             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.BehaviorTextEditorPanel"/>
	</Extension>
	
	<Extension path = "/SharpDevelop/Dialogs/OptionsDialog">
		<DialogPanel id    = "TextEditorOptions"
		             insertafter = "CodingOptions"
		             insertbefore = "ToolsOptions"
		             label = "${res:Dialog.Options.IDEOptions.TextEditorOptionsText}">
			<DialogPanel id = "General"
			             label = "${res:Dialog.Options.IDEOptions.TextEditor.General.PanelName}"
			             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.GeneralTextEditorPanel"/>
			<DialogPanel id = "Markers"
			             label = "${res:Dialog.Options.IDEOptions.TextEditor.Markers.PanelName}"
			             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.MarkersTextEditorPanel"/>
			<DialogPanel id = "Behavior"
			             label = "${res:Dialog.Options.IDEOptions.TextEditor.Behaviour.PanelName}"
			             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.BehaviorTextEditorPanel"/>
		</DialogPanel>
	</Extension>
	
	<Extension path = "/SharpDevelop/Workbench/MainMenu/Tools">
                <Conditional activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextAreaControlProvider" action="Disable">
		        <MenuItem id = "InsertColor" 
		                  insertafter = "Separator1" insertbefore = "Options"
			          label = "${res:XML.MainMenu.ToolMenu.InsColor}" 
			          description = "${res:XML.MainMenu.ToolMenu.InsColor.Description}" 
			          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ShowColorDialog"/> 
		</Conditional>
	</Extension>
	
	
	<Extension path = "/SharpDevelop/DefaultEditor/SearchAndReplace/WildcardHelpPath">
		<MenuItem id = "*Char"
	                  label = "* Zero or more of any character" />
		<MenuItem id = "?Char"
	                  label = "? Any single character" />
		<MenuItem id = "#Char"
	                  label = "# Any single digit" />
		<MenuItem id = "[]Char"
	                  label = "[] Any one character in the set" />
		<MenuItem id = "[!]Char"
	                  label = "[!] Any one character not in the set" />
	</Extension>
	
	
	<!-- Note : Most actions are put directly into the control, because 
	            they're used for the standalone version too, only put keys in the
	            tree that are sharpdevelop specific, general keys put into TextAreaControl.GenerateDefaultActions --> 
	<Extension path = "/AddIns/DefaultTextEditor/EditActions">
		<EditAction id = "TemplateCompletion" class = "ICSharpCode.SharpDevelop.DefaultEditor.Actions.TemplateCompletion"  keys = "Control|J"/>		
		<EditAction id = "IndentSelection" class = "ICSharpCode.TextEditor.Actions.IndentSelection"  keys = "Control|I"/>		
	</Extension>
	
</AddIn>
